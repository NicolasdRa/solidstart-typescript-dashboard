/* Dashboard Layout CSS Module */
@import "tailwindcss";

/* CSS Custom Properties for Layout Stability */
:root {
  --sidebar-width-expanded: 288px; /* w-72 = 18rem = 288px */
  --sidebar-width-collapsed: 64px;  /* w-16 = 4rem = 64px */
}

/* Main Container */
.container {
  background-color: var(--bg-secondary);
  /* Prevent layout shifts during hydration and navigation */
  contain: layout style;
  /* Use CSS Grid for proper layout */
  display: grid;
  grid-template-columns: var(--sidebar-width-expanded) 1fr;
  grid-template-areas: "sidebar content";
  /* Dynamic height based on viewport */
  height: 100vh;
  min-height: 100vh;
  /* Ensure full available width */
  width: 100%;
  min-width: 100%;
  max-width: 100%;
  overflow-x: hidden;
  /* Force layout stability */
  will-change: auto;
  backface-visibility: hidden;
}

/* Adaptive height for non-fullscreen scenarios */
@media (min-width: 769px) {
  .container {
    /* Use dynamic viewport height that adapts to window size */
    height: 100vh;
    min-height: 100vh;
    max-height: 100vh;
  }
}

.containerCollapsed {
  grid-template-columns: var(--sidebar-width-collapsed) 1fr;
  grid-template-rows: 1fr;
  transition: grid-template-columns 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.containerExpanded {
  grid-template-columns: var(--sidebar-width-expanded) 1fr;
  grid-template-rows: 1fr;
  transition: grid-template-columns 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Content Area */
.contentArea {
  @apply flex flex-col min-w-0;
  grid-area: content;
  width: 100%;
  height: 100%;
}

/* Mobile Adjustments */
@media (max-width: 768px) {
  .container,
  .containerCollapsed,
  .containerExpanded {
    /* Stack layout on mobile */
    display: block;
    grid-template-columns: none;
    grid-template-areas: none;
  }
  
  .contentArea {
    /* Content area takes full width on mobile */
    @apply w-full;
    grid-area: none;
  }
}

/* Inner Content */
.innerContent {
  @apply flex-1 p-6 overflow-y-auto;
  /* Prevent content jumping during layout changes */
  contain: layout style;
  /* Ensure content can expand to full width */
  width: 100%;
  max-width: none;
  box-sizing: border-box;
  /* Prevent FOUC by maintaining consistent content area */
  min-height: 0;
  /* Smooth transitions for content changes */
  transition: opacity 150ms ease-in-out;
}

@media (max-width: 640px) {
  .innerContent {
    @apply p-3;
  }
}

/* SSR stability - prevent flash of unstyled content */
/* Default to expanded state during SSR/initial render */

/* Responsive behavior */
@media (prefers-reduced-motion: reduce) {
  .container,
  .containerCollapsed,
  .containerExpanded {
    transition: none !important;
  }
}